import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicInteger;
import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.PinState;
import com.pi4j.io.gpio.RaspiPin;


public class LEDserverjava {


        public static void main(String[] args) {
                AtomicInteger numThreads = new AtomicInteger(0);
                // the list of threads is kept in a linked list
                ArrayList<Thread> list = new ArrayList<Thread>();

                try {
                        // listen for incoming connections on port 15432
                        ServerSocket socket = new ServerSocket(15432);
                        System.out.println("Server listening on port 15432");

                        // loop (forever) until program is stopped
                        while(true) {
                                // accept a new connection
                                Socket client = socket.accept();
                                // start a new ServerThread to handle the connection and send
                                // output to the client
                                Thread thrd = new Thread(new serverthread(client));
                                list.add(thrd);
                                thrd.start();
                                numThreads.incrementAndGet();
                                System.out.println("Thread " + numThreads.get() + " started.");

                                final GpioController gpio = GpioFactory.getInstance();
                                final GpioPinDigitalOutput pin = gpio.provisionDigitalOutputPin(RaspiPin.GPIO_04, "MyLED", PinState.HIGH);
                                pin.setShutdownOptions(true, PinState.LOW);


                        }
                }
                catch (IOException ioe){
                        ioe.printStackTrace();
                }

        }
}
